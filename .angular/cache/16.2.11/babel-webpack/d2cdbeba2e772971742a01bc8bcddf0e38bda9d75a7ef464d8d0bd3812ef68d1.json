{"ast":null,"code":"// counter.component.ts\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nclass CounterComponent {\n  constructor() {\n    this.counterValue = 0;\n    this.counterChange = new EventEmitter();\n  }\n  increment() {\n    this.counterValue++;\n    this.counterChange.emit(this.counterValue);\n  }\n  static #_ = this.ɵfac = function CounterComponent_Factory(t) {\n    return new (t || CounterComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CounterComponent,\n    selectors: [[\"app-counter\"]],\n    inputs: {\n      counterValue: \"counterValue\"\n    },\n    outputs: {\n      counterChange: \"counterChange\"\n    },\n    decls: 4,\n    vars: 1,\n    consts: [[3, \"click\"]],\n    template: function CounterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function CounterComponent_Template_button_click_0_listener() {\n          return ctx.increment();\n        });\n        i0.ɵɵtext(1, \"Incr\\u00E9menter\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"p\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\"Compteur: \", ctx.counterValue, \"\");\n      }\n    },\n    encapsulation: 2\n  });\n}\nexport { CounterComponent };","map":{"version":3,"names":["EventEmitter","CounterComponent","constructor","counterValue","counterChange","increment","emit","_","_2","selectors","inputs","outputs","decls","vars","consts","template","CounterComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵlistener","CounterComponent_Template_button_click_0_listener","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1"],"sources":["C:\\Users\\rand_\\exo2\\src\\app\\counter\\counter.component.ts"],"sourcesContent":["// counter.component.ts\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-counter',\n  template: `\n    <button (click)=\"increment()\">Incrémenter</button>\n    <p>Compteur: {{ counterValue }}</p>\n  `,\n  styles: []\n})\nexport class CounterComponent {\n  @Input() counterValue: number = 0;\n  @Output() counterChange = new EventEmitter<number>();\n\n  increment() {\n    this.counterValue++;\n    this.counterChange.emit(this.counterValue);\n  }\n}\n\n"],"mappings":"AAAA;AACA,SAAmCA,YAAY,QAAQ,eAAe;;AAEtE,MAQaC,gBAAgB;EAR7BC,YAAA;IASW,KAAAC,YAAY,GAAW,CAAC;IACvB,KAAAC,aAAa,GAAG,IAAIJ,YAAY,EAAU;;EAEpDK,SAASA,CAAA;IACP,IAAI,CAACF,YAAY,EAAE;IACnB,IAAI,CAACC,aAAa,CAACE,IAAI,CAAC,IAAI,CAACH,YAAY,CAAC;EAC5C;EAAC,QAAAI,CAAA,G;qBAPUN,gBAAgB;EAAA;EAAA,QAAAO,EAAA,G;UAAhBP,gBAAgB;IAAAQ,SAAA;IAAAC,MAAA;MAAAP,YAAA;IAAA;IAAAQ,OAAA;MAAAP,aAAA;IAAA;IAAAQ,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,0BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QALzBE,EAAA,CAAAC,cAAA,gBAA8B;QAAtBD,EAAA,CAAAE,UAAA,mBAAAC,kDAAA;UAAA,OAASJ,GAAA,CAAAb,SAAA,EAAW;QAAA,EAAC;QAACc,EAAA,CAAAI,MAAA,uBAAW;QAAAJ,EAAA,CAAAK,YAAA,EAAS;QAClDL,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAI,MAAA,GAA4B;QAAAJ,EAAA,CAAAK,YAAA,EAAI;;;QAAhCL,EAAA,CAAAM,SAAA,GAA4B;QAA5BN,EAAA,CAAAO,kBAAA,eAAAR,GAAA,CAAAf,YAAA,KAA4B;;;;;;SAItBF,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}